services:
  queue:
    image: office-hours-queue
    build: ../server
    restart: unless-stopped
    networks:
      - http
      - db
      - logging
    ports:
      - "127.0.0.1:6060:6060"
    depends_on:
      - db
      - logstash
    secrets:
      - sessions_key
      - postgres_password
      - oauth2_client_secret
      - metrics_password
    environment:
      TZ: America/Los_Angeles
      QUEUE_BASE_URL: "/"
      QUEUE_DB_URL: db
      QUEUE_DB_DATABASE: queue
      QUEUE_DB_USERNAME: queue
      QUEUE_DB_PASSWORD_FILE: /run/secrets/postgres_password
      QUEUE_SESSIONS_KEY_FILE: /run/secrets/sessions_key
      QUEUE_OIDC_ISSUER_URL: ${QUEUE_OIDC_ISSUER_URL:?error}
      QUEUE_OAUTH2_CLIENT_ID: ${QUEUE_OAUTH2_CLIENT_ID:?error}
      QUEUE_OAUTH2_CLIENT_SECRET_FILE: /run/secrets/oauth2_client_secret
      QUEUE_OAUTH2_REDIRECT_URI: "https://${QUEUE_DOMAIN:?error}/api/oauth2callback"
      QUEUE_VALID_DOMAIN: ${QUEUE_VALID_DOMAIN:?error}
      QUEUE_OAUTH2_USE_PKCE: ${QUEUE_OAUTH2_USE_PKCE}
      QUEUE_SITE_ADMIN_GROUPS: ${QUEUE_SITE_ADMIN_GROUPS}
      USE_SECURE_COOKIES: "true"
      METRICS_PASSWORD_FILE: /run/secrets/metrics_password
    logging:
      driver: fluentd
      options:
        fluentd-address: tcp://127.0.0.1:5000
        fluentd-async: "true"
  db:
    image: postgres:13.21
    restart: unless-stopped
    volumes:
      - ./volumes/db:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    networks:
      - db
    ports:
      - "127.0.0.1:8001:5432"
    secrets:
      - postgres_password
    environment:
      POSTGRES_USER: queue
      POSTGRES_PASSWORD_FILE: /run/secrets/postgres_password
      POSTGRES_DB: queue
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:9.1.0
    restart: unless-stopped
    volumes:
      - ./volumes/elastic:/usr/share/elasticsearch/data
    networks:
      - logging
    environment:
      bootstrap.memory_lock: "true"
      discovery.type: single-node
      xpack.security.enabled: "false"
      ES_JAVA_OPTS: "-Xms512m -Xmx512m"
    ulimits:
      memlock:
        soft: -1
        hard: -1
  logstash:
    image: docker.elastic.co/logstash/logstash:9.1.3
    restart: unless-stopped
    volumes:
      - "./fluent-input.conf:/usr/share/logstash/pipeline/03-fluent-input.conf"
    networks:
      - logging
    ports:
      - "127.0.0.1:5000:5000"
    logging:
      driver: local
      options:
        max-size: "5m"
        max-file: "2"
  kibana:
    image: docker.elastic.co/kibana/kibana:9.1.0
    restart: unless-stopped
    volumes:
      - ./kibana.yml:/usr/share/kibana/config/kibana.yml
    networks:
      - logging
    environment:
      ELASTICSEARCH_URL: http://elasticsearch:9200
      ELASTICSEARCH_HOSTS: http://elasticsearch:9200
      SERVER_PUBLICBASEURL: https://${QUEUE_DOMAIN:?error}/kibana
  caddy:
    image: caddy:2
    restart: unless-stopped
    volumes:
      - ./Caddyfile.prod:/etc/caddy/Caddyfile
      - caddy_data:/data
      - ../frontend/dist:/dist
    environment:
      QUEUE_DOMAIN: ${QUEUE_DOMAIN:?error}
    networks:
      - http
      - logging
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
      - 127.0.0.1:2020:2020
    logging:
      driver: fluentd
      options:
        fluentd-address: tcp://127.0.0.1:5000
        fluentd-async: "true"

volumes:
  caddy_data:

networks:
  http:
  db:
  logging:

secrets:
  postgres_password:
    file: ./secrets/postgres_password
  sessions_key:
    file: ./secrets/signing.key
  oauth2_client_secret:
    file: ./secrets/oauth2_client_secret
  metrics_password:
    file: ./secrets/metrics_password
